# Generated by Django 3.2.18 on 2023-05-25 05:40

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BelongstoCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('poster_path', models.CharField(max_length=200, null=True)),
                ('backdrop_path', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Cast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=50)),
                ('profile_path', models.CharField(max_length=200, null=True)),
                ('character', models.CharField(max_length=100, null=True)),
                ('order', models.IntegerField()),
                ('credit_id', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, null=True)),
                ('release_date', models.DateField(null=True)),
                ('runtime', models.IntegerField(null=True)),
                ('tagline', models.CharField(max_length=80, null=True)),
                ('popularity', models.FloatField(null=True)),
                ('vote_count', models.IntegerField(null=True)),
                ('vote_average', models.FloatField(null=True)),
                ('overview', models.TextField(null=True)),
                ('poster_path', models.CharField(max_length=200, null=True)),
                ('backdrop_path', models.CharField(max_length=200, null=True)),
                ('budget', models.IntegerField(null=True)),
                ('revenue', models.IntegerField(null=True)),
                ('belongs_to_collection', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='movies.belongstocollection')),
                ('cast', models.ManyToManyField(to='movies.Cast')),
                ('genres', models.ManyToManyField(to='movies.Genre')),
            ],
        ),
        migrations.CreateModel(
            name='ProductionCompanies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo_path', models.CharField(max_length=200, null=True)),
                ('name', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductionCountries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Boxoffice',
            fields=[
                ('movie', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to='movies.movie')),
                ('rank', models.IntegerField()),
                ('rank_inten', models.CharField(max_length=10)),
                ('open_dt', models.CharField(max_length=20)),
                ('audicnt', models.IntegerField()),
                ('audiacc', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('like_users', models.ManyToManyField(blank=True, related_name='like_users', to=settings.AUTH_USER_MODEL)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.movie')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='movie',
            name='production_companies',
            field=models.ManyToManyField(to='movies.ProductionCompanies'),
        ),
        migrations.AddField(
            model_name='movie',
            name='production_countries',
            field=models.ManyToManyField(to='movies.ProductionCountries'),
        ),
        migrations.AddField(
            model_name='movie',
            name='recommendation',
            field=models.ManyToManyField(related_name='recommended', to='movies.Movie'),
        ),
        migrations.AddField(
            model_name='movie',
            name='similar',
            field=models.ManyToManyField(related_name='similar_from', to='movies.Movie'),
        ),
        migrations.AddField(
            model_name='movie',
            name='video',
            field=models.ManyToManyField(to='movies.Video'),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.review')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
